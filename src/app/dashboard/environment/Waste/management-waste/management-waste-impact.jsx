'use client'
import React, { useState, useEffect } from 'react';
import Form from '@rjsf/core';
import validator from '@rjsf/validator-ajv8';
import TextareaWidget2 from "../../../../shared/widgets/TextareaWidget2";
const widgets = {
    TextareaWidgetnew: TextareaWidget2,
};

const schema = {
    type: 'array',
    items: {
        type: 'object',
        properties: {
            Q1: {
                type: "string",
                format: 'textarea',
            },
            Q2: {
                type: "string",
                format: 'textarea',
            },
            Q3: {
                type: "string",
                format: 'textarea',
            },

            // Define other properties as needed
        }
    }
};


const uiSchema = { // Add flex-wrap to wrap fields to the next line
    items: {
        Q1: {
            "ui:hadding": "Actions taken to prevent waste generation and to manage significant impacts from waste generated",
            "ui:title": "Describe actions taken to prevent waste generated from organization's own activities, upstream activities and downstream activities in its value chain",
            "ui:tooltipshadding": "Include: Actions mentioned should include actions including circularity measures.",
            "ui:tooltipstitle": "Include: Actions mentioned should include actions including circularity measures. ",
            "ui:haddingdisplay": "block",
            "ui:titlediplay": "block",
            "ui:haddingtooltipdisplay": "block",
            "ui:titletooltipdisplay": "none",
            "ui:Gri": "GRI 306-1a",
            'ui:widget': 'TextareaWidgetnew', // Use your custom widget for QuantityUnit
            'ui:options': {
                label: false // This disables the label for this field
            },
        },
        Q2: {
            "ui:hadding": "Waste Management by Third-party",
            "ui:title": "If the waste generated by the organization in its own activities is managed by a third party, describe of the processes used to determine whether the third party manages the waste in line with contractual or legislative obligations.",
            "ui:tooltipshadding": "This section documents the data corresponding to the waste generated by the organization in its own activities is managed by a third party. ",
            "ui:tooltipstitle": "Third-party: Third party includes a public or private waste management organization, or any other entity or group of individuals formally or informally involved in handling the reporting organizationâ€™s waste.Include: Agreements in a contract for the third party to follow when managing its waste, or rely on existing legislative obligations, such as local environmental laws and regulations",
            "ui:haddingdisplay": "block",
            "ui:titlediplay": "block",
            "ui:haddingtooltipdisplay": "block",
            "ui:titletooltipdisplay": "block",
            "ui:Gri": "GRI 306-1b",
            'ui:widget': 'TextareaWidgetnew', // Use your custom widget for QuantityUnit
            'ui:options': {
                label: false // This disables the label for this field
            },
        },
        Q3: {
            "ui:hadding": "Waste Management by Third-party",
            "ui:title": "Describe the processes used to collect and monitor waste-related data",
            "ui:tooltipshadding": "This section documents the data corresponding to the processes used to collect and monitor waste-related data.",
            "ui:tooltipstitle": "Please specify the processes used to collect and monitor waste-related data. Include: Processes can include online data entry, maintaining a centralized database, real-time weighbridge measurement, and annual external data validation.",
            "ui:haddingdisplay": "block",
            "ui:titlediplay": "block",
            "ui:haddingtooltipdisplay": "block",
            "ui:titletooltipdisplay": "block",
            "ui:Gri": "GRI 306-1b",
            'ui:widget': 'TextareaWidgetnew', // Use your custom widget for QuantityUnit
            'ui:options': {
                label: false // This disables the label for this field
            },
        },
        'ui:options': {
            orderable: false, // Prevent reordering of items
            addable: false, // Prevent adding items from UI
            removable: false, // Prevent removing items from UI
            layout: 'horizontal', // Set layout to horizontal
        }
    }
};
const Managementwasteimpact = () => {
    const [formData, setFormData] = useState([{}]);
    const handleChange = (e) => {
      setFormData(e.formData);
    };
    const handleSubmit = (e) => {
      e.preventDefault();
      console.log('Form data:', formData);
    };


    return (
      <>
        <div >
          <div>
          <Form
            schema={schema}
            uiSchema={uiSchema}
            formData={formData}
            onChange={handleChange}
            validator={validator}
            widgets={widgets}
          />
          </div>
        </div>
        <div className='mb-4'>
        <button type="button"  className=" text-center py-1 text-sm w-[100px] bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:shadow-outline float-end" onClick={handleSubmit}>Submit</button>
        </div>
        </>
    );
};

export default Managementwasteimpact;
